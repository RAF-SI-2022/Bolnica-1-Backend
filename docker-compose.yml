version: '3.9'

services:
#-------------------------------------------------
#-----------------Other services------------------
#-------------------------------------------------
  activemq:
    image: harbor.k8s.elab.rs/bolnica-1/activemq:latest
    build:
      context: ./activeMQ
      dockerfile: Dockerfile
    restart: always
    container_name: activemq
    ports:
      - "8079:8079"
      - "8078:8078"
      - "61616:61616"
      - "8161:8161"
    volumes:
      - ./activemq/data:/data
      - ./activemq/conf:/conf
      - ./activemq/logs:/logs
    environment:
      ACTIVEMQ_ADMIN_LOGIN: admin
      ACTIVEMQ_ADMIN_PASSWORD: admin
    networks:
      - my_local_network

  redis:
    image: redis:7.0.11-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_local_network

#-------------------------------------------
#------------------Services-----------------
#-------------------------------------------

  covid-service:
    image: harbor.k8s.elab.rs/bolnica-1/covid-service:dev
    build:
      context: ./node-js-backend
      dockerfile: Dockerfile
    restart: always
    container_name: covid-service
    environment:
      - MONGO_URI=mongodb://root:admin@mongo:27017/covid?retryWrites=true&w=majority
    ports:
      - "9000:9000"
    networks:
      - my_local_network
    profiles:
      - all
      - covid

  employees-service:
    image: harbor.k8s.elab.rs/bolnica-1/employees:prod
    build:
      context: ./employees
      dockerfile: Dockerfile
    restart: always
    container_name: employees
    ports:
      - "8080:8080"
    environment:
      - spring_profiles_active=dev
      - spring_database_url=mysql-db
      - spring_database_port=${spring_database_port}
      - spring_redis_host=redis
    networks:
      - my_local_network
    healthcheck:
      test: curl --fail http://localhost:8080/api || exit 1
      interval: 15s
      retries: 10
      start_period: 10s
      timeout: 60s
    depends_on:
      mysql-db:
        condition: service_healthy
    profiles:
      - employees
      - all

  patients-service:
    image: harbor.k8s.elab.rs/bolnica-1/patients:prod
    build:
      context: ./patients
      dockerfile: Dockerfile
    restart: always
    container_name: patients
    ports:
      - "8081:8081"
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://activemq:61616
      - employee_service_url=http://employees-service:8080/api
      - laboratory_service_url=http://laboratory-service:8083/api
      - spring_profiles_active=dev
      - spring_database_url=mysql-db
      - spring_database_port=${spring_database_port}
      - spring_redis_host=redis
    networks:
      - my_local_network
    depends_on:
      mysql-db:
        condition: service_healthy
      employees-service:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8081/api || exit 1
      interval: 15s
      retries: 10
      start_period: 10s
      timeout: 60s
    profiles:
      - patients
      - all

  laboratory-service:
    image: harbor.k8s.elab.rs/bolnica-1/laboratory:prod
    build:
      context: ./laboratory
      dockerfile: Dockerfile
    restart: always
    container_name: laboratory
    ports:
      - "8083:8083"
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://activemq:61616
      - employee_service_url=http://employees-service:8080/api
      - patients_service_url=http://patients-service:8081/api
      - spring_profiles_active=dev
      - spring_database_url=mysql-db
      - spring_database_port=${spring_database_port}
      - spring_redis_host=redis
    networks:
      - my_local_network
    depends_on:
      mysql-db:
        condition: service_healthy
      patients-service:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8083/api || exit 1
      interval: 15s
      retries: 10
      start_period: 10s
      timeout: 60s
    profiles:
      - laboratory
      - all

  infirmary-service:
    image: harbor.k8s.elab.rs/bolnica-1/infirmary:prod
    build:
      context: ./infirmary
      dockerfile: Dockerfile
    restart: always
    container_name: infirmary
    ports:
      - "8084:8084"
    environment:
      - SPRING_ACTIVEMQ_BROKER_URL=tcp://activemq:61616
      - employee_service_url=http://employees-service:8080/api
      - patients_service_url=http://patients-service:8081/api
      - laboratory_service_url=http://laboratory-service:8083/api
      - spring_profiles_active=dev
      - spring_database_url=mysql-db
      - spring_database_port=${spring_database_port}
      - spring_redis_host=redis
    networks:
      - my_local_network
    depends_on:
      mysql-db:
        condition: service_healthy
      laboratory-service:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8084/api || exit 1
      interval: 15s
      retries: 10
      start_period: 10s
      timeout: 60s
    profiles:
      - infirmary
      - all

#--------------------------------------------
#------------------Databases-----------------
#--------------------------------------------
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=admin
    ports:
      - "33060:3306"
    volumes:
      - mysql:/var/lib/db
    networks:
      - my_local_network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 15s
      retries: 10
      start_period: 10s
      timeout: 60s

  mongo:
      image: mongo
      container_name: mongo
      restart: always
      environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=admin
        - MONGO_INITDB_DATABASE=covid 
      ports:
        - "27017:27017"
      networks:
        - my_local_network
      volumes:
        - mongo:/var/lib/db
        - ./setupUser.js:/docker-entrypoint-initdb.d/setupUser.js

networks:
  my_local_network:
    name : my_local_network

volumes:
  mysql:
    driver: local
  mongo:
    driver: local